{"version":3,"sources":["images/IMG_9939.png","components/sidebar.js","components/content.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","className","this","props","url","personalImage","alt","name","text","description","icons","contact","Component","Separator","Title","Image","src","Description","location","Footer","map","val","classes","platform","Icon","href","target","rel","Content","sectionName","profile","education","index","details","qualifications","projects","experience","skills","Section","children","Item","heading","dateRange","undefined","start_date","end_date","startDate","formatDate","endDate","position","Education","type","Object","keys","data","Qualifications","subject","grade","Skill","date","Date","toLocaleDateString","month","year","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39d631d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/IMG_9939.90afb2ef.png\";","import React, { Component } from 'react';\nimport { name, description, location, contact } from \"../profile.json\";\n\nimport personalImage from \"../images/IMG_9939.png\";\n\nclass Sidebar extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className={this.props.className}>\n\t\t\t\t<div className=\"side-info\">\n\t\t\t\t\t<Image\n\t\t\t\t\t\turl={personalImage}\n\t\t\t\t\t\talt={name}\n\t\t\t\t\t/>\n\t\t\t\t\t<Title\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t/>\n\t\t\t\t\t<Description\n\t\t\t\t\t\tclassName=\"description\"\n\t\t\t\t\t\ttext={description}\n\t\t\t\t\t/>\n\t\t\t\t\t<Separator />\n\t\t\t\t\t<Footer icons={contact}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst Separator = () => {\n\treturn (\n\t\t<div className=\"sep\"></div>\n\t);\n}\n\nconst Title = ({className, name}) => {\n\treturn (\n\t\t<h2>{name}</h2>\n\t);\n}\n\nconst Image = ({className, url, alt}) => {\n\treturn (\n\t\t<img src={url} alt={alt} />\n\t);\n}\n\nconst Description = ({className, text}) => {\n\treturn (\n\t\t<div className={className}>\n\t\t\t<p>{text}</p>\n\t\t\t<Separator />\n\t\t\t<small className=\"location\">\n\t\t\t\t<Icon name=\"fas fa-map-marker-alt\" />\n\t\t\t\t{location}\n\t\t\t</small>\n\t\t</div>\n\t);\n}\n\nconst Footer = ({icons}) => {\n\treturn (\n\t\t<div className=\"side-footer\">\n\t\t\t{contact.map(function(val){\n\t\t\t\treturn <Icon key={val.platform} url={val.url} name={val.classes} />\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nconst Icon = ({url, name}) => {\n\treturn (\n\t\t<a href={url}\n\t\t\tclassName=\"contact-icon\"\n\t\t\ttarget=\"_blank\"\n\t\t\trel=\"noopener noreferrer\"\n\t\t>\n\t\t\t<i className={name}></i>\n\t\t</a>\n\t);\n}\n\n\nexport default Sidebar;","import React, { Component } from 'react';\nimport { profile, education, projects, experience, skills } from '../profile.json';\n\nclass Content extends Component {\n\trender() {\n\n\t\treturn (\n\t\t\t<div className={this.props.className}>\n\t\t\t\t<Section sectionName=\"Profile\">\n\t\t\t\t\t{profile}\n\t\t\t\t</Section>\n\t\t\t\t<Section sectionName=\"Education\">\n\t\t\t\t\t{education.map((val, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Item key={index} details={val}>\n\t\t\t\t\t\t\t\t<Education qualifications={val.qualifications} />\n\t\t\t\t\t\t\t</Item>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Section>\n\t\t\t\t<Section sectionName=\"Projects\">\n\t\t\t\t\t{projects.map((val, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Item key={index} details={val} />\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</Section>\n\t\t\t\t<Section sectionName=\"Experience\">\n\t\t\t\t\t{experience.map((val, index) => {\n\t\t\t\t\t\treturn <Item key={index} details={val} />\n\t\t\t\t\t})}\n\t\t\t\t</Section>\n\t\t\t\t<Section sectionName=\"Skills\">\n\t\t\t\t\t{skills.map((val) => {\n\t\t\t\t\t\treturn <Skill key={val} name={val} />;\n\t\t\t\t\t})}\n\t\t\t\t</Section>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst Section = ({children, sectionName}) => {\n\treturn (\n\t\t<div className=\"section\">\n\t\t\t<div className=\"section-name\">\n\t\t\t\t{sectionName}\n\t\t\t</div>\n\t\t\t<div className=\"section-content\">\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst Item = ({children, details}) => {\n\tconst heading = details.url ?\n\t\t\t\t\t<h6><a target=\"_blank\" rel=\"noopener noreferrer\" href={details.url}>{details.name}</a></h6> :\n\t\t\t\t\t<h6>{details.name}</h6>;\n\n\tlet dateRange = undefined;\n\tif(details.start_date || details.end_date) {\n\t\tconst startDate = formatDate(details.start_date);\n\t\tconst endDate = formatDate(details.end_date);\n\t\tdateRange = <p>{startDate} - {endDate}</p>;\n\t}\n\tconst description = details.description ? <div className=\"item-description\">{details.description}</div> : undefined;\n\n\treturn (\n\t\t<div className=\"item\">\n\t\t\t<div className=\"item-details\">\n\t\t\t\t{heading}\n\t\t\t\t<p className=\"position\">{details.position}</p>\n\t\t\t\t{dateRange}\n\t\t\t</div>\n\t\t\t{description}\n\t\t\t<div className=\"item-data\">\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst Education = ({qualifications}) => {\n\tconst type = Object.keys(qualifications);\n\treturn (\n\t\t<div className=\"qualifications\">\n\t\t\t{type.map((val, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={index} className=\"qualification\">\n\t\t\t\t\t\t<h6 className=\"qualification-type\">{val}</h6>\n\t\t\t\t\t\t<Qualifications data={qualifications[val]} />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nconst Qualifications = ({data}) => {\n\treturn (\n\t\t<ul className=\"qualification-list\">\n\t\t\t{data.map((val, index) => {\n\t\t\t\treturn <li key={index}><b>{val.subject}</b> - {val.grade}</li>;\n\t\t\t})}\n\t\t</ul>\n\t);\n}\n\nconst Skill = ({name}) => {\n\treturn (\n\t\t<div className=\"skill\">{name}</div>\n\t);\n}\n\nconst formatDate = (date) => {\n\tif(date) {\n\t\tlet options = {month: 'long', year: 'numeric'};\n\t\treturn new Date(date).toLocaleDateString('en-GB', options);\n\t}\n\treturn \"Present\";\n}\n\n\nexport default Content;"," import React, { Component } from 'react';\nimport Sidebar from './components/sidebar';\nimport Content from './components/content';\nimport profile from './profile.json';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n            <Sidebar\n                className=\"sidebar\"\n                profile={profile}\n            />\n            <Content className=\"content\" />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}